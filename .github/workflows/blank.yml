name: CI/CD Pipeline with Delphi

on:
  push:
    branches:
      - master

jobs:
  build:
    name: Build Projects
    runs-on: [self-hosted, Windows, X64]  # Runner para compilação

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3                    

    - name: Compile EmissaoMicroservice
      run: |
        cd EmissaoMicroservice 
        boss i
        c:\temp\build.bat . "EmissaoMicroservice.dproj"

    - name: Compile AuthMicroservice
      run: | 
        cd AuthMicroservice
        boss i
        c:\temp\build.bat . "AuthMicroservice.dproj"

    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v4.4.3
      with:
        name: build-artifacts
        path: |
          EmissaoMicroservice\bin\EmissaoMicroservice
          AuthMicroservice\bin\AuthMicroservice

  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest 

    needs: build
    steps:
      - name: Parando servicos
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          script: |
            sudo systemctl stop emissao.service
            sudo systemctl stop auth.service

      - name: Download Build Artifacts
        uses: actions/download-artifact@v4.1.8
        with:
          name: build-artifacts

      - name: Deploy das apis
        uses: nogsantos/scp-deploy@master
        with:
          src: .
          host: ${{ secrets.HOST }}
          remote: ${{ secrets.SSH_DIR }}
          port: ${{ secrets.PORT }}
          user: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}

      - name: Inciando servicos
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          script: |
            sudo systemctl start emissao.service
            sudo systemctl start auth.service
